declare function fastq<T>(context: T, worker: fastq.worker<T>, concurrency: number): fastq.queue;
declare function fastq<T>(worker: fastq.worker<T>, concurrency: number): fastq.queue;

declare namespace fastq {
  type worker<T> = (this: T, arg: any, cb: () => void) => void;
  type done = (err: Error, result: any) => void;

  interface queue {
    concurrency: number;
    empty: () => void;
    saturated: () => void;
    push(task: any, done: done): void;
    unshift(task: any, done: done): void;
    pause(): any;
    resume(): any;
    idle(): boolean;
    length(): number;
    kill(): any;
    killAndDrain(): any;
    drain(): any;
  }
}

export = fastq;
