/// <reference types="node" />
import * as fsScandir from "@nodelib/fs.scandir";
import { EventEmitter } from "events";
import Settings from "../settings";
import { Entry, Errno } from "../types/index";
import Reader from "./reader";
declare type EntryEventCallback = (entry: Entry) => void;
declare type ErrorEventCallback = (error: Errno) => void;
declare type EndEventCallback = () => void;
export default class AsyncReader extends Reader {
    protected readonly _settings: Settings;
    protected readonly _scandir: typeof fsScandir.scandir;
    protected readonly _emitter: EventEmitter;
    private readonly _queue;
    private _isFatalError;
    private _isDestroyed;
    private _pushToQueue;
    private _worker;
    private _handleError;
    private _handleEntry;
    private _emitEntry;
    constructor(_root: string, _settings: Settings);
    public read(): EventEmitter;
    public destroy(): void;
    public onEntry(callback: EntryEventCallback): void;
    public onError(callback: ErrorEventCallback): void;
    public onEnd(callback: EndEventCallback): void;
}
export {};
// # sourceMappingURL=async.d.ts.map
